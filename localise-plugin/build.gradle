buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.novoda:bintray-release:0.8.1"
    }
}

repositories {
    google()
    mavenCentral()
    jcenter()
}

group 'com.github.amatkivskiy'
version '0.1'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.novoda.bintray-release'

publish {
    groupId = 'com.github.amatkivskiy'
    artifactId = 'localise'
    publishVersion = version
    desc = 'This is a gradle plugin for Android projects that fetches localization strings.xml localise.biz web service.'
    licences = ['MIT']
    website = 'https://github.com/amatkivskiy/localise-gradle-plugin'
    autoPublish = false
    bintrayUser = 'amatkivskiy'
    userOrg = 'amatkivskiy'
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile gradleTestKit()
    testCompile(group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

uploadArchives {
    repositories.mavenDeployer {
        pom.artifactId = 'localise'
        repository(url: uri('../localRepo'))
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

task deleteLocalRepo(type: Delete) {
    delete '../localRepo/*.*'
    outputs.upToDateWhen { false }
}
